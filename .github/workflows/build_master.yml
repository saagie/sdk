name: Master Build

on:
  push:
    branches:
      - master

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        node-version: [12.x, 13.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installing dependencies and bootstraping Lerna
        run: |
          yarn
          yarn bs
      - name: Linting
        run: yarn lint
      - name: Testing
        run: yarn test

  release:
    runs-on: ubuntu-latest
    needs: tests
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn install --frozen-lockfile

          export PATH=$(yarn bin):$PATH

          VERSION=`auto version`
          
          if [ ! -z "$VERSION" ]; then
            git config --global user.name "Yoann Fleury"
            git config --global user.email "yoann.fleury@saagie.com"
            yarn deploy --yes $VERSION -m '%v [skip ci]'
            auto release
          fi

env:
  CI: "true"
